{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_CloudControllers_Api_Communities_Users",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.08"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/Communities/{communityId}/Users/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Add a user to a Community.",
        "operationId": "Users_AddUserToCommunity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Id of the User to add to the specified Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Administrator",
          "Community Moderator"
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a User from a Community.",
        "operationId": "Users_RemoveUserFromCommunity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Id of the user to remove from the specified Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": "Removed."
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Administrator",
          "Community Moderator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Communities/{communityId}/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of all users of the Tenant in this Community.",
        "operationId": "Users_GetAllUsers",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of users to skip.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 4
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of users to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Community roles not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Member"
        ]
      },
      "head": {
        "tags": [
          "Users"
        ],
        "summary": "Get a count of all users of the Tenant in this Community. This endpoint is identical to the\n            Get All Users List except it does not return a body.",
        "operationId": "Users_GetAllUsersCount",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the calling Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Community roles not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Administrator",
          "Community Moderator",
          "Community Member"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "description": "Object for retrieving a User.",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets unique User ID.",
            "format": "guid"
          },
          "GivenName": {
            "type": "string",
            "description": "Gets or sets given name of user.",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "description": "Gets or sets surname of user.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of user.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets or sets email of user.",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "Gets or sets contact email for user. User will only be contacted\nthrough this email.",
            "nullable": true
          },
          "ContactGivenName": {
            "type": "string",
            "description": "Gets or sets preferred contact name for user.",
            "nullable": true
          },
          "ContactSurname": {
            "type": "string",
            "description": "Gets or sets preferred contact surname for user.",
            "nullable": true
          },
          "ExternalUserId": {
            "type": "string",
            "description": "Gets or sets provider id for user. This is the unique ID we\nget from the Identity Provider.",
            "nullable": true
          },
          "IdentityProviderId": {
            "type": "string",
            "description": "Gets or sets Identity Provider Id used to authenticate User.\nWill be set once the User accepts an invitation.\nIf not specified when sending the invitation to\nthe User, it can be any of the Identity Provider\nIds configured for this Tenant.",
            "format": "guid",
            "nullable": true
          },
          "RoleIds": {
            "type": "array",
            "description": "Gets or sets list of strings of RoleIds.",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      }
    }
  }
}