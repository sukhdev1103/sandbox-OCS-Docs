{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Api_Tenants_AuthorizationCodeClients",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.08"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/AuthorizationCodeClients": {
      "post": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Create an Authorization Code flow Client. No Secret will be generated for this\n            Client.",
        "operationId": "AuthorizationCodeClients_CreateAuthorizationCodeClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "authorizationCodeClient",
          "description": "New AuthorizationCodeClient object.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthorizationCodeClient"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "201": {
            "description": "Authorization Code Client created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodeClient"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs, or Client limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Client Id already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Get all Authorization Code clients from a Tenant.\n            Optionally, get a list of requested clients. Total number\n            of clients in the Tenant set in the Total-Count header.",
        "operationId": "AuthorizationCodeClients_GetAuthorizationCodeClients",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Unordered list of ids for all clients to get. Empty or whitespace Ids will be ignored.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "tag",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Only return Clients that have these tags.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of clients to skip. From query.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 5
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of clients to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization Code Clients found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizationCodeClient"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Return total number of Authorization Code clients in a Tenant.\n            Optionally, check based on a list of requested clients. The\n            value will be set in the Total-Count header. This endpoint\n            is identical to the GET one but it does not return any objects\n            in the body.",
        "operationId": "AuthorizationCodeClients_GetAuthorizationCodeClientsHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Unordered list of ids for all clients to get. Empty or whitespace Ids will be ignored.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "tag",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Only count Clients that have these tags.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization Code Client headers."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Client or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/AuthorizationCodeClients/{clientId}": {
      "put": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Update an Authorization Code Client. It can take up to one hour\n            for update to manifest in the authentication process.",
        "operationId": "AuthorizationCodeClients_UpdateAuthorizationCodeClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "authorizationCodeClient",
          "description": "Updated Authorization Code Client values. Properties that are not set or are null will not be changed.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthorizationCodeClient"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Authorization Code Client updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodeClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Get an Authorization Code Client from Tenant.",
        "operationId": "AuthorizationCodeClients_GetAuthorizationCodeClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization Code Client specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodeClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "delete": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Delete an Authorization Code Client. It can take up to one hour\n            for deletion to manifest in the authentication process. Access\n            tokens issued to this client will be valid until their expiration.",
        "operationId": "AuthorizationCodeClients_DeleteAuthorizationCodeClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "AuthorizationCodeClients"
        ],
        "summary": "Validate that an Authorization Code Client exists in Tenant.",
        "operationId": "AuthorizationCodeClients_GetAuthorizationCodeClientHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Header for specified Authorization Code Client.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorizationCodeClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebClient"
          },
          {
            "type": "object",
            "description": "Object used during Authorization Code Client creation.",
            "additionalProperties": false,
            "properties": {
              "AllowedCorsOrigins": {
                "type": "array",
                "description": "Gets or sets the values used by the default CORS policy service implementations to build a\nCORS policy for JavaScript clients.",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "WebClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "type": "object",
            "description": "Object used during Client creation.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "RedirectUris": {
                "type": "array",
                "description": "Gets or sets the allowed URIs to which return tokens or authorization codes can be returned.\nWildcards are ignored. URIs must match exactly what you are redirecting to\nafter login. If URIs do not match, the authentication process will fail\nwith a bad_client error.\nMaximum 10 per client.",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "PostLogoutRedirectUris": {
                "type": "array",
                "description": "Gets or sets allowed URIs to redirect to after logout. Wildcards are ignored.\nURIs must match exactly what you are redirecting to after logout.\nMaximum 10 for client.",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "ClientUri": {
                "type": "string",
                "description": "Gets or sets URI to a page with information about client (used on consent screen).",
                "nullable": true
              },
              "LogoUri": {
                "type": "string",
                "description": "Gets or sets URI to client logo (used on consent screen).",
                "nullable": true
              }
            }
          }
        ]
      },
      "Client": {
        "type": "object",
        "description": "Base object used during Client creation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets client ID for this client. This ID should be a GUID.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of Client.",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets whether client is enabled. Client can be used for authentication\nif set to true. Client cannot be used for authentication if set to false.",
            "nullable": true
          },
          "AccessTokenLifetime": {
            "type": "integer",
            "description": "Gets or sets lifetime of access token issued for this client after authentication.\nMinimum 60 seconds. Maximum 3600 seconds. Defaults to 3600 seconds.",
            "format": "int32",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "description": "Gets or sets for OSIsoft internal use only.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "ClientCredentialClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "type": "object",
            "description": "Object to get or update a Client Credential Client.",
            "additionalProperties": false,
            "properties": {
              "RoleIds": {
                "type": "array",
                "description": "Gets or sets list of Roles to be assigned to this client. Member role is always required.\nFor security reasons we advise against assigning Admin roles to a client.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        ]
      }
    }
  }
}