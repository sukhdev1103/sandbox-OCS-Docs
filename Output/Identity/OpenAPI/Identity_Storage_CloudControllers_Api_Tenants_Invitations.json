{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_CloudControllers_Api_Tenants_Invitations",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.08"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/Invitations/{invitationId}": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "summary": "Get an Invitation from Tenant.",
        "operationId": "Invitations_GetInvitation",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Id of Invitation.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invitation or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "put": {
        "tags": [
          "Invitations"
        ],
        "summary": "Update an Invitation. Expired invitations will not be extended.\n            automatically upon updates.",
        "operationId": "Invitations_UpdateInvitation",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Id of Invitation.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "invitationCreateOrUpdate",
          "description": "New InvitationCreateOrUpdate object. Properties that are not set or are null will not be changed.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InvitationCreateOrUpdate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Updated Invitation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invitation or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "delete": {
        "tags": [
          "Invitations"
        ],
        "summary": "Delete an Invitation. Users who already have an Invitation email\n            will not be able to sign-up once the Invitation is deleted.",
        "operationId": "Invitations_DeleteInvitation",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Id of Invitation.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invitation or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Invitations"
        ],
        "summary": "Validate that an Invitation exists. This endpoint is identical to the GET\n            one, but it does not return an object in the body.",
        "operationId": "Invitations_GetInvitationHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Id of Invitation.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Header for Invitation specified."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Invitation or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Invitations": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "summary": "Get all non-expired invitations from a Tenant. Optionally include expired invitations.",
        "operationId": "Invitations_GetInvitations",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of invitations to skip.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 3
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of invitations to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 4
          },
          {
            "name": "includeExpiredInvitations",
            "in": "query",
            "description": "Specify whether to return expired invitations.",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Invitations found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invitation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Invitations"
        ],
        "summary": "Return total number of non-expired Invitations in a Tenant. Optionally include expired invitations.\n            The value will be set in the Total-Count header. This endpoint is identical to the GET one but\n            it does not return any objects in the body.",
        "operationId": "Invitations_GetInvitationsHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "includeExpiredInvitations",
            "in": "query",
            "description": "Specify to return expired invitations.",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Header for Invitations found."
          },
          "400": {
            "description": "Missing or invalid inputs."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Invitation": {
        "type": "object",
        "description": "Object for an Invitation.",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets unique Invitation Id.",
            "nullable": true
          },
          "Issued": {
            "type": "string",
            "description": "Gets or sets invitation issuing timestamp.",
            "format": "date-time"
          },
          "Expires": {
            "type": "string",
            "description": "Gets or sets invitation expiration timestamp.",
            "format": "date-time"
          },
          "Accepted": {
            "type": "string",
            "description": "Gets or sets invitation accepted timestamp.",
            "format": "date-time",
            "nullable": true
          },
          "State": {
            "description": "Gets or sets invitation state. Can be None (0), InvitationEmailSent (1), InvitationAccepted (2).",
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationStates"
              }
            ]
          },
          "TenantId": {
            "type": "string",
            "description": "Gets or sets ID of the Tenant the invitation belongs to.",
            "format": "guid"
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets ID of the User whom the invitation was issued to.",
            "format": "guid"
          }
        }
      },
      "InvitationStates": {
        "type": "integer",
        "description": "Invitation states.",
        "x-enumFlags": true,
        "x-enumNames": [
          "None",
          "InvitationEmailSent",
          "InvitationAccepted"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "InvitationCreateOrUpdate": {
        "type": "object",
        "description": "Object used to create or update an Invitation.",
        "additionalProperties": false,
        "properties": {
          "ExpiresDateTime": {
            "type": "string",
            "description": "Gets or sets invitation expiration date. Must be in the future.\nMaximum allowed is two month in the future.\nDefaults to 21 days on creation.\nIt should be in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) and either\ninclude a *Z* at the end to represent UTC timezone\nor include the offset in hours. If neither is present\ntime will be treated in the local time zone of the server.",
            "format": "date-time",
            "nullable": true
          },
          "State": {
            "description": "Gets or sets set the state of invitation. For OSISoft internal use only.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationStates"
              }
            ]
          },
          "SendInvitation": {
            "type": "boolean",
            "description": "Gets or sets send an invitation email. Invitation will be sent to the\nContactEmail in the User this invitation is attached to.\nDefault is true.",
            "nullable": true
          },
          "IdentityProviderId": {
            "type": "string",
            "description": "Gets or sets Identity Provider to use for accepting this invitation.\nRequired when creating an Invitation.",
            "format": "guid",
            "nullable": true
          }
        }
      }
    }
  }
}