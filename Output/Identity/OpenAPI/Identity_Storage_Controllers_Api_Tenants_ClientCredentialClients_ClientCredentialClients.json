{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Api_Tenants_ClientCredentialClients_ClientCredentialClients",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.08"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/ClientCredentialClients": {
      "post": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Create a Client Credential Client. A Client Id and Client Secret will be generated to perform\n            authentication. Make sure to store the Secret somewhere safe as we do not store the\n            actual value after the creation step. If you do not have access to the Secret value, we suggest\n            deleting the Secret and adding a new one for this Client. Clients have unique Ids in a Tenant.\n            Currently there is a limit of 50000 clients (of all types) per Tenant.",
        "operationId": "ClientCredentialClients_CreateClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "clientCredentialClientCreate",
          "description": "ClientCredentialClientCreate object.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientCredentialClientCreate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "201": {
            "description": "Client Credential Client details for Client Credential Client created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClientCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs, or Client limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Client Id already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get a list of Client Credential clients from a Tenant.\n            Optionally, get a list of requested clients. Total number\n            of clients in the Tenant set in the Total-Count header.",
        "operationId": "ClientCredentialClients_GetClientCredentialClients",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Unordered list of Client Credential Client Ids. Empty, whitespace or null Ids will be ignored.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "tag",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Only return Clients that have these tags.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of clients to skip. Will be ignored if a list of Ids is passed.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 5
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of clients to return. Will be ignored if a list of Ids is passed.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Clients found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientCredentialClient"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Client Credential Clients found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClientMultiStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Return total number of Client Credential clients in a Tenant.\n            Optionally, check based on a list of requested clients. The\n            value will be set in the Total-Count header. This endpoint\n            is identical to the GET one but it does not return any objects\n            in the body.",
        "operationId": "ClientCredentialClients_GetClientCredentialClientsHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Unordered list of Client Credential Client Ids. Empty, whitespace or null Ids will be ignored.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "tag",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Only count Clients that have these tags.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client Headers found."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Client or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/ClientCredentialClients/{clientId}": {
      "put": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Update a Client Credential Client. It can take up to one hour\n            for these values to manifest in the authentication process.",
        "operationId": "ClientCredentialClients_UpdateClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "updatedClientCredentialClient",
          "description": "ClientCredentialClient object. Properties that are not set or are null will not be changed.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientCredentialClient"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Client Credential Client updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get a Client Credential Client.",
        "operationId": "ClientCredentialClients_GetClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member",
          "Self"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "delete": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Delete a Client Credential Client. It can take up to one hour\n            for deletion to manifest in the authentication process. Access\n            tokens issued to this Client will be valid until their expiration.",
        "operationId": "ClientCredentialClients_DeleteClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Validate that a Client Credential Client exists.\n            This endpoint is identical to the GET one but\n            it does not return any objects in the body.",
        "operationId": "ClientCredentialClients_GetClientCredentialClientHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Header for specified Client Credential Client."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Client or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member",
          "Self"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1-preview/Tenants/{tenantId}/ClientCredentialClients": {
      "get": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get all Client Credential Clients.",
        "operationId": "ClientCredentialClients_GetV1PreviewClientCredentialClients",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "tag",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Only return Clients that have these tags.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of clients to skip. From query.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 4
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of clients to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "List of ClientCredentialClients found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientCredentialClient2"
                  }
                }
              }
            }
          },
          "207": {
            "description": "List of ClientCredentialClients found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClientMultiStatusResponse2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ]
      },
      "post": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Create a Client Credential flow Client.",
        "operationId": "ClientCredentialClients_CreateV1PreviewClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "clientCredentialClientCreate",
          "description": "New ClientCredentialClientCreate object.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientCredentialClientCreate2"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "201": {
            "description": "Hybrid Client created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs, or Client limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Client Id already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1-preview/Tenants/{tenantId}/ClientCredentialClients/{clientId}": {
      "get": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get a Client Credential Client.",
        "operationId": "ClientCredentialClients_GetV1PreviewClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "ClientCredentialClient specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ]
      },
      "put": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Update a Client Credential Client.",
        "operationId": "ClientCredentialClients_UpdateV1PreviewClientCredentialClient",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "updatedClientCredentialClient",
          "description": "Updated Client Credential Client values.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientCredentialClient2"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Updated ClientCredentialClient.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ClientCredentialClientCreateResponse": {
        "type": "object",
        "description": "Secret information returned after a Client Credential Client is created.",
        "additionalProperties": false,
        "properties": {
          "Secret": {
            "type": "string",
            "description": "Gets or sets client secret.",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Gets or sets secret Id.",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets description for the initial secret for the client.",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Gets or sets expiration date for the initial secret for the client.",
            "format": "date-time",
            "nullable": true
          },
          "Client": {
            "description": "Gets or sets client Client Credential Client created.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClientCredentialClient"
              }
            ]
          }
        }
      },
      "ClientCredentialClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "type": "object",
            "description": "Object to get or update a Client Credential Client.",
            "additionalProperties": false,
            "properties": {
              "RoleIds": {
                "type": "array",
                "description": "Gets or sets list of Roles to be assigned to this client. Member role is always required.\nFor security reasons we advise against assigning Admin roles to a client.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        ]
      },
      "Client": {
        "type": "object",
        "description": "Base object used during Client creation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets client ID for this client. This ID should be a GUID.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of Client.",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets whether client is enabled. Client can be used for authentication\nif set to true. Client cannot be used for authentication if set to false.",
            "nullable": true
          },
          "AccessTokenLifetime": {
            "type": "integer",
            "description": "Gets or sets lifetime of access token issued for this client after authentication.\nMinimum 60 seconds. Maximum 3600 seconds. Defaults to 3600 seconds.",
            "format": "int32",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "description": "Gets or sets for OSIsoft internal use only.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "ClientCredentialClientCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientCredentialClient"
          },
          {
            "type": "object",
            "description": "Object used during Client creation.",
            "additionalProperties": false,
            "properties": {
              "SecretDescription": {
                "type": "string",
                "description": "Gets or sets description for the initial secret for the client. Ensure that this is descriptive enough,\nas it will be the only way to distinguish between multiple secrets and their usage for a\nclient.",
                "nullable": true
              },
              "SecretExpirationDate": {
                "type": "string",
                "description": "Gets or sets expiration date for the initial secret for the client. If set to null the secret will\nnever expire. We advise against such practice.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "ClientCredentialClientMultiStatusResponse": {
        "type": "object",
        "description": "MultiStatusResponse objects returned in a 207 response.",
        "additionalProperties": false,
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId that resulted in this error.",
            "nullable": true
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets string message describing the error.",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason that caused the error.",
            "nullable": true
          },
          "ChildErrors": {
            "type": "array",
            "description": "Gets or sets list of ChildErrors.\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MultiStatusResponseChildError"
            }
          },
          "Data": {
            "type": "array",
            "description": "Gets or sets data.\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClientCredentialClient"
            }
          }
        }
      },
      "MultiStatusResponseChildError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          {
            "type": "object",
            "description": "ChildError objects returned in a 207 response.",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "StatusCode": {
                "type": "integer",
                "description": "Gets or sets hTTP status code.",
                "format": "int32"
              },
              "ModelId": {
                "type": "string",
                "description": "Gets or sets model ID.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ClientCredentialClient2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RoleIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        ]
      },
      "Client2": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ClientId": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClientCredentialClientMultiStatusResponse2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "OperationId": {
            "type": "string",
            "nullable": true
          },
          "Error": {
            "type": "string",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "nullable": true
          },
          "ChildErrors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MultiStatusResponseChildError"
            }
          },
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClientCredentialClient2"
            }
          }
        }
      },
      "ClientCredentialClientResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientCredentialClientCreate2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClientSecret": {
                "type": "string",
                "nullable": true
              },
              "SecretId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ClientCredentialClientCreate2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientCredentialClient2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SecretDescription": {
                "type": "string",
                "nullable": true
              },
              "SecretExpirationDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      }
    }
  }
}