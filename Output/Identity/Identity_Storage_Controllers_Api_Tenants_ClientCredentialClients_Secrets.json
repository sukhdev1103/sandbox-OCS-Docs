{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Api_Tenants_ClientCredentialClients_Secrets",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.07"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/ClientCredentialClients/{clientId}/Secrets": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Get all secrets for a Client Credential Client.\n            Total number of secrets in the Client set in the\n            Total-Count header.",
        "operationId": "Secrets_GetClientCredentialClientSecrets",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of clients to skip. From query.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 4
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of clients to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Secret information found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientSecret"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "post": {
        "tags": [
          "Secrets"
        ],
        "summary": "Add a new Secret to a Client Credential Client.\n            A Client can have a maximum of 10 secrets.\n            We advise against creating secrets that do not expire.",
        "operationId": "Secrets_AddClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "clientSecretCreateOrUpdate",
          "description": "ClientSecretCreateOrUpdate object.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "201": {
            "description": "Client Credential Client Secret updated information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecretResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Secrets"
        ],
        "summary": "Return total number of Secrets in a Client. The value\n            will be set in the Total-Count header. This endpoint\n            is identical to the GET one but it does not return\n            any objects in the body.",
        "operationId": "Secrets_GetClientCredentialClientSecretsHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client Secret header information."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Client or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/ClientCredentialClients/{clientId}/Secrets/{secretId}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Get a Client Credential Client Secret.",
        "operationId": "Secrets_GetClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "Id of Secret.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client Secret information specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecret"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Secret, Client, or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "put": {
        "tags": [
          "Secrets"
        ],
        "summary": "Update a Client Credential Client Secret.\n            It can take up to one hour for the update\n            to manifest in the authentication process.",
        "operationId": "Secrets_UpdateClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "Id of Secret.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "clientSecretCreateOrUpdate",
          "description": "ClientSecretCreateOrUpdate object. Properties that are not set or are null will not be changed.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 4
        },
        "responses": {
          "200": {
            "description": "Updated Client Credential Client Secret information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecret"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Secret, Client, or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "delete": {
        "tags": [
          "Secrets"
        ],
        "summary": "Delete a Secret from a Client Credential Client.\n            It can take up to one hour for deletion to manifest\n            in the authentication process. Access tokens issued\n            using this Secret will be valid until their expiration.",
        "operationId": "Secrets_DeleteClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "Id of Secret.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Secret, Client, or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Secrets"
        ],
        "summary": "Validate that a Secret with given Id exists in the Client.\n            This endpoint is identical to the GET one but it does not\n            return any objects in the body.",
        "operationId": "Secrets_GetClientCredentialClientSecretHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of Client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "Id of Secret.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Header for specified Client Credential Client Secret."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Secret, Client, or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1-preview/Tenants/{tenantId}/ClientCredentialClients/{clientId}/Secrets": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Get all secrets for a Client Credential Client.",
        "operationId": "Secrets_GetV1PreviewClientCredentialClientSecrets",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of clients to skip. From query.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 4
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of clients to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client Secrets found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientSecret2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "post": {
        "tags": [
          "Secrets"
        ],
        "summary": "Add a new secret for a Client Credential Client.",
        "operationId": "Secrets_AddV1PreviewClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "clientSecretCreateOrUpdate",
          "description": "Client Secret to create.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "201": {
            "description": "Client Credential Client Secret created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecretResponse2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1-preview/Tenants/{tenantId}/ClientCredentialClients/{clientId}/Secrets/{secretId}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Get a specific Client Credential Client Secret.",
        "operationId": "Secrets_GetV1PreviewClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "Id of secret.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Client Credential Client Secret specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecret2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Secret, Client, or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "put": {
        "tags": [
          "Secrets"
        ],
        "summary": "Update a Client Credential Client Secret\n            Only Secret Description and Secret Expiration Date can be updated.",
        "operationId": "Secrets_UpdateV1PreviewClientCredentialClientSecret",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of client.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "secretId",
            "in": "path",
            "required": true,
            "description": "secretId.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "clientSecretCreateOrUpdate",
          "description": "Client Secret details.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 4
        },
        "responses": {
          "200": {
            "description": "Updated Client Credential Client Secret.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSecret2"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Secret, Client, or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ClientSecret": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
          },
          {
            "type": "object",
            "description": "Client Secret Object.",
            "additionalProperties": false,
            "properties": {
              "Id": {
                "type": "integer",
                "description": "Gets or sets id for this Secret.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ClientSecretCreateOrUpdate": {
        "type": "object",
        "description": "Object to write a Client Secret.",
        "additionalProperties": false,
        "properties": {
          "Expiration": {
            "type": "string",
            "description": "Gets or sets expiration date for the client secret. Will be null if the secret does not expire.",
            "format": "date-time",
            "nullable": true
          },
          "Expires": {
            "type": "boolean",
            "description": "Gets or sets determines if the secret expires. Defaults to true.\nIf Expires is set to true (or null) and Expiration is not null, expiration of this secret will be enforced.\nIf Expires is set to true (or null) and Expiration is null, a 400 error will be returned.\nIf Expires is set to false and Expiration is not null, a 400 error will be returned.\nIf Expires is set to false and Expiration is null, there will be no expiration of this secret.",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets description for the client secret. We suggest being as descriptive as possible. This field will make identifying\nsecrets easier.",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "ClientSecretResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientSecret"
          },
          {
            "type": "object",
            "description": "Object returned after a Client Secret is created.",
            "additionalProperties": false,
            "properties": {
              "Secret": {
                "type": "string",
                "description": "Gets or sets client secret.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ClientSecret2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientSecretCreateOrUpdate"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SecretId": {
                "type": "string",
                "nullable": true
              },
              "Id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ClientSecretResponse2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientSecret2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClientSecret": {
                "type": "string",
                "nullable": true
              },
              "Secret": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      }
    }
  }
}