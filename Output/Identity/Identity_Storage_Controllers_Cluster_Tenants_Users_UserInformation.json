{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Cluster_Tenants_Users_UserInformation",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.07"
  },
  "paths": {
    "/api/v1/tenants/{tenantId}/users/{userId}/UserInformation": {
      "get": {
        "tags": [
          "UserInformation"
        ],
        "summary": "Get UserInformation for Access Token Refresh.",
        "operationId": "UserInformation_GetUserInformationForTokenRefresh",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of Tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "claimTypes",
            "in": "query",
            "required": true,
            "description": "Claim Types.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "UserInformation or UserInformationMultiStatusResponse.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationResponse"
                }
              }
            }
          },
          "207": {
            "description": "UserInformation or UserInformationMultiStatusResponse.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationMultiStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs, or Client limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Dependency service not available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserInformationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "UserInformation": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserInformationMultiStatusResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "OperationId": {
            "type": "string",
            "nullable": true
          },
          "Error": {
            "type": "string",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "nullable": true
          },
          "ChildErrors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MultiStatusResponseChildError"
            }
          },
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserInformationResponse"
              }
            ]
          }
        }
      },
      "MultiStatusResponseChildError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          {
            "type": "object",
            "description": "ChildError objects returned in a 207 response.",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "StatusCode": {
                "type": "integer",
                "description": "Gets or sets hTTP status code.",
                "format": "int32"
              },
              "ModelId": {
                "type": "string",
                "description": "Gets or sets model ID.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      }
    }
  }
}