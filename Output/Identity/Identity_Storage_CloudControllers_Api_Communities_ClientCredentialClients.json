{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_CloudControllers_Api_Communities_ClientCredentialClients",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.06"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/Communities/{communityId}/ClientCredentialClients": {
      "head": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get Client Credential Client Count for a Community.",
        "operationId": "ClientCredentialClients_GetCommunityClientCredentialClientsCount",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of the Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Member"
        ]
      },
      "get": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Get Client Credential clients for a Community.",
        "operationId": "ClientCredentialClients_GetCommunityClientCredentialClients",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientCredentialClient"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Member"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Communities/{communityId}/ClientCredentialClients/{clientId}": {
      "put": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Add a Client Credential Client to a Community.",
        "operationId": "ClientCredentialClients_AddClientCredentialClientToCommunity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of the Client Credential Client to add to the specified Community.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCredentialClient"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Administrator",
          "Community Moderator"
        ]
      },
      "delete": {
        "tags": [
          "ClientCredentialClients"
        ],
        "summary": "Remove a Client Credential Client from a Community.",
        "operationId": "ClientCredentialClients_RemoveClientCredentialClientFromCommunity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of the Tenant that belongs to this Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "description": "Id of Community.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "Id of the Client Credential Client to remove from the specified Community.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": "Removed."
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Community Administrator",
          "Community Moderator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "ClientCredentialClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "type": "object",
            "description": "Object to get or update a Client Credential Client.",
            "additionalProperties": false,
            "properties": {
              "RoleIds": {
                "type": "array",
                "description": "Gets or sets list of Roles to be assigned to this client. Member role is always required.\nFor security reasons we advise against assigning Admin roles to a client.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        ]
      },
      "Client": {
        "type": "object",
        "description": "Base object used during Client creation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets client ID for this client. This ID should be a GUID.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of Client.",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets whether client is enabled. Client can be used for authentication\nif set to true. Client cannot be used for authentication if set to false.",
            "nullable": true
          },
          "AccessTokenLifetime": {
            "type": "integer",
            "description": "Gets or sets lifetime of access token issued for this client after authentication.\nMinimum 60 seconds. Maximum 3600 seconds. Defaults to 3600 seconds.",
            "format": "int32",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "description": "Gets or sets for OSIsoft internal use only.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}