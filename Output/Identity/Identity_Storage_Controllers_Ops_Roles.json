{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Ops_Roles",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.06"
  },
  "paths": {
    "/api/v1/Roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Returns the specified Role.",
        "operationId": "Roles_GetRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Role specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": []
      },
      "head": {
        "tags": [
          "Roles"
        ],
        "summary": "Get header for a Role.",
        "operationId": "Roles_GetRoleHeader",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Id of provider.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Header for Role specified."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Role not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": []
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update an existing \u0060Role\u0060 .",
        "operationId": "Roles_PutRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "role",
          "description": "Role to update.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Role"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Role created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Role already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": []
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a Role.",
        "operationId": "Roles_DeleteRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Delete built-in Roles not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": []
      }
    }
  },
  "components": {
    "schemas": {
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "Description": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "RoleScope": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoleScope"
              }
            ]
          },
          "TenantId": {
            "type": "string",
            "format": "guid",
            "deprecated": true,
            "x-deprecatedMessage": "TenantId will be removed in the next release. Please remove references to it.",
            "nullable": true
          },
          "CommunityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "RoleTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "RoleScope": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Account",
          "Community",
          "Cluster"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      }
    }
  }
}