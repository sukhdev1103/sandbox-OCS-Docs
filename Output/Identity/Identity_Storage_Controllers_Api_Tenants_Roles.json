{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Identity_Storage_Controllers_Api_Tenants_Roles",
    "contact": {
      "name": "OSIsoft Cloud Services",
      "url": "https://cloud.osisoft.com",
      "email": "cloudservices@osisoft.com"
    },
    "version": "20210115.06"
  },
  "paths": {
    "/api/v1/Tenants/{tenantId}/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all Roles for a Tenant.",
        "operationId": "Roles_GetTenantRoles",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query to execute. Currently not supported.",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of providers to skip.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 3
          },
          {
            "name": "count",
            "in": "query",
            "description": "Max number of providers to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "List of Roles found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Roles"
        ],
        "summary": "Get header for Roles to get the total number of Roles for a given tenant.",
        "operationId": "Roles_GetTenantRolesHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Headers for Roles found."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new \u0060Role\u0060 for a Tenant.",
        "operationId": "Roles_PostTenantRole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "role",
          "description": "Role to create.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Role"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "201": {
            "description": "Role created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "302": {
            "description": "A role with the same Id or Name already exists in the Tenant."
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant or Role not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "A role with some matching values already exists in Tenant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Roles/{roleId}/users": {
      "head": {
        "tags": [
          "Roles"
        ],
        "summary": "Gets the total number of users for a given role.",
        "operationId": "Roles_GetUsersCountForARole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id for the Role.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Headers for Roles found."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant or Role not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all the Users for a given role.",
        "operationId": "Roles_GetUsersForARole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Users for a given role.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant or Role not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Roles/{roleId}/clientcredentialclients": {
      "head": {
        "tags": [
          "Roles"
        ],
        "summary": "Get the total number of clients for a given role.",
        "operationId": "Roles_GetClientCredentialClientsCountForARole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Headers for the total number of clients for a given role."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant or Role not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all the clients for a given role.",
        "operationId": "Roles_GetClientCredentialClientsForARole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Clients for a given role.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientCredentialClient"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Tenant or Role not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      }
    },
    "/api/v1/Tenants/{tenantId}/Roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Returns the specified Role.",
        "operationId": "Roles_GetTenantRole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role Id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Role specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "head": {
        "tags": [
          "Roles"
        ],
        "summary": "Get header for a Role on given tenant.",
        "operationId": "Roles_GetTenantRoleHeader",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Id of tenant.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Id of provider.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Header for Role specified."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "IdentityProvider or Tenant not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-authorized-roles": [
          "Account Member"
        ],
        "x-strict-roles": [
          "Account Administrator"
        ]
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a \u0060Role\u0060 for a Tenant.",
        "operationId": "Roles_PutTenantRole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "role",
          "description": "Role to update.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Role"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Updated Role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant or Role not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a Role from a Tenant.",
        "operationId": "Roles_DeleteTenantRole",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "description": "Tenant ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "description": "Role ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "IdentityProvider or Tenant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Delete built-in Roles not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "408": {
            "description": "Operation timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-authorized-roles": [
          "Account Administrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "Description": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "RoleScope": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoleScope"
              }
            ]
          },
          "TenantId": {
            "type": "string",
            "format": "guid",
            "deprecated": true,
            "x-deprecatedMessage": "TenantId will be removed in the next release. Please remove references to it.",
            "nullable": true
          },
          "CommunityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "RoleTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "RoleScope": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Account",
          "Community",
          "Cluster"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Object returned whenever there is an error.",
        "example": {
          "OperationId": "1b2af18e-8b27-4f86-93e0-6caa3e59b90c",
          "Error": "Error message.",
          "Reason": "Reason that caused error.",
          "Resolution": "Possible solution for the error."
        },
        "additionalProperties": {
          "nullable": true
        },
        "required": [
          "OperationId",
          "Error",
          "Reason",
          "Resolution"
        ],
        "properties": {
          "OperationId": {
            "type": "string",
            "description": "Gets or sets operationId of action that caused the Error.",
            "minLength": 1
          },
          "Error": {
            "type": "string",
            "description": "Gets or sets error description.",
            "minLength": 1
          },
          "Reason": {
            "type": "string",
            "description": "Gets or sets reason for the Error.",
            "minLength": 1
          },
          "Resolution": {
            "type": "string",
            "description": "Gets or sets what can be done to resolve the Error.",
            "minLength": 1
          }
        }
      },
      "User": {
        "type": "object",
        "description": "Object for retrieving a User.",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets unique User ID.",
            "format": "guid"
          },
          "GivenName": {
            "type": "string",
            "description": "Gets or sets given name of user.",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "description": "Gets or sets surname of user.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of user.",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Gets or sets email of user.",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "Gets or sets contact email for user. User will only be contacted\nthrough this email.",
            "nullable": true
          },
          "ContactGivenName": {
            "type": "string",
            "description": "Gets or sets preferred contact name for user.",
            "nullable": true
          },
          "ContactSurname": {
            "type": "string",
            "description": "Gets or sets preferred contact surname for user.",
            "nullable": true
          },
          "ExternalUserId": {
            "type": "string",
            "description": "Gets or sets provider id for user. This is the unique ID we\nget from the Identity Provider.",
            "nullable": true
          },
          "IdentityProviderId": {
            "type": "string",
            "description": "Gets or sets Identity Provider Id used to authenticate User.\nWill be set once the User accepts an invitation.\nIf not specified when sending the invitation to\nthe User, it can be any of the Identity Provider\nIds configured for this Tenant.",
            "format": "guid",
            "nullable": true
          },
          "RoleIds": {
            "type": "array",
            "description": "Gets or sets list of strings of RoleIds.",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "ClientCredentialClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "type": "object",
            "description": "Object to get or update a Client Credential Client.",
            "additionalProperties": false,
            "properties": {
              "RoleIds": {
                "type": "array",
                "description": "Gets or sets list of Roles to be assigned to this client. Member role is always required.\nFor security reasons we advise against assigning Admin roles to a client.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        ]
      },
      "Client": {
        "type": "object",
        "description": "Base object used during Client creation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets client ID for this client. This ID should be a GUID.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets name of Client.",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets whether client is enabled. Client can be used for authentication\nif set to true. Client cannot be used for authentication if set to false.",
            "nullable": true
          },
          "AccessTokenLifetime": {
            "type": "integer",
            "description": "Gets or sets lifetime of access token issued for this client after authentication.\nMinimum 60 seconds. Maximum 3600 seconds. Defaults to 3600 seconds.",
            "format": "int32",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "description": "Gets or sets for OSIsoft internal use only.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}